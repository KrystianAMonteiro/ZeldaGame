package com.xhavasstudios.world;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.IOException;

import javax.imageio.ImageIO;

import com.xhavasstudios.entitites.Bullet;
import com.xhavasstudios.entitites.Enemy;
import com.xhavasstudios.entitites.Entity;
import com.xhavasstudios.entitites.LifePack;
import com.xhavasstudios.entitites.Weapon;
import com.xhavasstudios.main.Game;

public class World {
	
	private Tile[] tiles;
	public static int WIDTH, HEIGHT;
	
	
	public World(String path) {
		try {
			BufferedImage map = ImageIO.read(getClass().getResource(path));
			int[] pixels = new int [map.getWidth() * map.getHeight()];
			WIDTH = map.getWidth();
			HEIGHT = map.getHeight();
			tiles = new Tile[map.getWidth() * map.getHeight()];
			map.getRGB(0, 0, map.getWidth(), map.getHeight(), pixels,  0, map.getWidth());
            for(int xx = 0; xx < map.getWidth(); xx++) {
            	for(int yy = 0; yy < map.getHeight(); yy++) {
            		int pixelAtual = pixels [xx + (yy * map.getWidth())];
           			//CHAO
           			tiles[xx + (yy*WIDTH)] = new FloorTile(xx*16, yy*16,Tile.TILE_FLOOR);
            		
            		if(pixelAtual == 0xFFFFFFFF) {
            			//PAREDE
            			tiles[xx + (yy*WIDTH)] = new WallTile(xx*16, yy*16,Tile.TILE_WALL);
            			
            		}else if (pixelAtual == 0xFF000F00) {
            			//CHAO         			
            			tiles[xx + (yy*WIDTH)] = new FloorTile(xx*16, yy*16,Tile.TILE_FLOOR);
            			
               		}else if(pixelAtual == 0xFF0026FF) {
               			//PLAYER
               			Game.player.setX(xx*16);
               			Game.player.setY(yy*16);               			
               			
               		}else if(pixelAtual == 0xFFFF0000) {
               			//INIMIGO
               			Game.entities.add(new Enemy(xx*16, yy*16, 16, 16, Entity.ENEMY_EN ));
               			
               		}else if(pixelAtual == 0xFF303030) {
               			//LIFE PACK
               			Game.entities.add(new LifePack(xx*16, yy*16, 16, 16, Entity.LIFEPACK_EN ));
               			
               		}else if(pixelAtual == 0xFF4CFF00) {
               			//AMMO
               			Game.entities.add(new Bullet(xx*16, yy*16, 16, 16, Entity.BULLET_EN ));
               			
               		}else if(pixelAtual == 0xFF7F92FF) {
               			//ESPADA
               			Game.entities.add(new Weapon(xx*16, yy*16, 16, 16, Entity.WEAPON_EN ));
               			
               		}
            	}
            }
			
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public void render(Graphics g) {
		int xstart = Camera.x >> 4;
		int ystart = Camera.y >> 4;
		
		int xfinal = (xstart + Game.WIDTH / 16);
		int yfinal = (ystart + Game.HEIGHT / 16);
		
		
		for(int xx = 0; xx < HEIGHT; xx++) {
			for(int yy = 0; yy < HEIGHT; yy++) {
				Tile tile = tiles[xx + (yy*WIDTH)];
				tile.render(g);
				
			}
		}
	}
	

}
